version: '3.3'
services:

  db:
    image: postgres:13.0-alpine
    volumes:
      - postgresql_value:/var/lib/postgresql/data/
    env_file:
      - ./.env

  web:
#    image: p0lzi/foodgram-backend:latest
    build: ../backend
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    depends_on:
      - db
    env_file:
      - ./.env

#  frontend:
#    image: p0lzi/foodgram-frontend:latest
#
##    build:
##      context: ../frontend
##      dockerfile: Dockerfile
#    volumes:
#      - ../frontend/:/app/result_build/

  nginx:
    image: nginx:1.19.3
    ports:
      - "80:80"
#      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
#      - ../frontend/build:/usr/share/nginx/html/
      - ./docs/:/usr/share/nginx/html/api/docs/
      - static_value:/var/html/static/
      - media_value:/var/html/media/
#      - ./certbot/conf:/etc/letsencrypt
#      - ./certbot/www:/var/www/certbot
    depends_on:
      - web
#    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

#  certbot:
#    image: certbot/certbot
#    volumes:
#      - ./certbot/conf:/etc/letsencrypt
#      - ./certbot/www:/var/www/certbot
#    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  static_value:
  media_value:
  postgresql_value: